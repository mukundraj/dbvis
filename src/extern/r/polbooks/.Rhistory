layout(matrix(1:9, 3, 3))
for (i in 1:9) plot(rtree(20))
install.packages("ape")
for (i in 1:9) plot(rtree(20))
import(ape)
library("ape", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
import(ape)
for (i in 1:9) plot(rtree(20))
for (i in 1:9) plot(rtree(20))
plot(rtree(4))
plot(rtree(4))
plot(rtree(4))
plot(rtree(4))
rtree(4)
nodelabels()
tree <- pbtree(b = 1, d = 0.2, n = 40)
install.packages("phytools")
tree <- pbtree(b = 1, d = 0.2, n = 40)
library("phytools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("rgl")
install.packages("maps")
tree <- pbtree(b = 1, d = 0.2, n = 40)
library("phytools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:rgl", unload=TRUE)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:rgl", unload=TRUE)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:rgl", unload=TRUE)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:rgl", unload=TRUE)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library", type="source")
detach("package:rgl", unload=TRUE)
install.packages("rgl")
install.packages("rgl",type="source")
source('~/Desktop/work/projects/kgd/graphdepth.jl/src/extern/R/get_layout_from_gram.R')
library("monoProc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data(cars)
cars.lo <- loess(dist ~ speed, cars,control = loess.control(surface = "direct"))predict<-predict(cars.lo, data.frame(speed = seq(5, 30, 1)))plot(cars.lo, xlab="speed", ylab="dist")lines(seq(5, 30, 1),predict)
cars.lo <- loess(dist ~ speed, cars,
)
cars.lot
cars.lo
class(cars.lo)
class(loess)
loess
speed<-cars$speed
dist<-cars$dist
fit1<-ksmooth(speed, dist, "normal", bandwidth=2)
fit1
type(fit)
class(fit1)
M <- cor(matrix(rnorm(1000), ncol = 10))
M
D <- corDist(M)
install.packages("MKmisc")
library("MKmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
D <- corDist(M)
D
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
install.packages("RcppEigen")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
install.packages("igraph")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
install.packages("igraph")
install.packages("~/Desktop/igraph_1.0.1.tar.gz", repos = NULL, type = "source")
install.packages("~/Desktop/igraph_1.0.1.tar.gz", repos = NULL, type = "source")
rhome
r rhome
Sys.getenv("HOME")
library("igraph", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("graphkernels", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
CalculateConnectedGraphletKernel
CalculateGraphletKernelCpp
graphkernels_CalculateGraphletKernelCpp
CalculateVertexEdgeHistKernel
CalculateKernelCpp
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full.csv"
filenames <- list.files(ip)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
graphs_list[[i]] <- g
}
K <- CalculateConnectedGraphletKernel(graphs_list, 4)
K
write.table(K, file = opfile, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
load(mutag)
data("mutag")
mutag
mutag[1]
mutag[[1]]
lst <- list('one','two','three')
a <- lst[1]
a
class(a)
a[1]
b<-lst[2]
b
b<-lst[[2]]
class[b]
class(b)
b
mutag[[1]]
vertex_attr(mutag[[1]])
edge_attr(mutag[[1]])
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
ip_labels = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs-labels/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full.csv"
filenames <- list.files(ip)
filenames_labels <- list.files(ip_labels)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
graphs_list[[i]] <- g
labels = readLines(c(ip_labels,filenames_labels[i]))
print(labels)
}
c(ip_labels,filenames_labels[i])
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
ip_labels = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs-labels/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full.csv"
filenames <- list.files(ip)
filenames_labels <- list.files(ip_labels)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
graphs_list[[i]] <- g
cur_file_labels <- paste(c(ip_labels,filenames_labels[i]), collapse="")
labels = readLines(cur_file_labels)
print(labels)
}
object(labels)
class(labels)
typeof(labels)
labels[1]
mutag[[1]]
V(mutag[[1]])
V(mutag[[1]]$lebel)
V(mutag[[1]]$label)
V(mutag[[1]])$label
class(V(mutag[[1]])$label)
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
ip_labels = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs-labels/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full.csv"
filenames <- list.files(ip)
filenames_labels <- list.files(ip_labels)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
graphs_list[[i]] <- g
cur_file_labels <- paste(c(ip_labels,filenames_labels[i]), collapse="")
labels = readLines(cur_file_labels)
print(labels)
}
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
ip_labels = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs-labels/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full.csv"
filenames <- list.files(ip)
filenames_labels <- list.files(ip_labels)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
graphs_list[[i]] <- g
cur_file_labels <- paste(c(ip_labels,filenames_labels[i]), collapse="")
labels = readLines(cur_file_labels)
print(as.numeric(labels)
}
K <- CalculateConnectedGraphletKernel(graphs_list, 4)
# K <- CalculateExponentialRandomWalkKernel(graphs_list,0.1)
write.table(K, file = opfile, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
ip_labels = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs-labels/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full.csv"
filenames <- list.files(ip)
filenames_labels <- list.files(ip_labels)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
graphs_list[[i]] <- g
cur_file_labels <- paste(c(ip_labels,filenames_labels[i]), collapse="")
labels = readLines(cur_file_labels)
print(as.numeric(labels))
}
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
ip_labels = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs-labels/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full.csv"
filenames <- list.files(ip)
filenames_labels <- list.files(ip_labels)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
graphs_list[[i]] <- g
cur_file_labels <- paste(c(ip_labels,filenames_labels[i]), collapse="")
labels <- readLines(cur_file_labels)
labels <- as.numeric(labels))
}
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
ip_labels = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs-labels/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full.csv"
filenames <- list.files(ip)
filenames_labels <- list.files(ip_labels)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
graphs_list[[i]] <- g
cur_file_labels <- paste(c(ip_labels,filenames_labels[i]), collapse="")
labels <- readLines(cur_file_labels)
labels <- as.numeric(labels)
}
labels
class(labels)
V(mutag[[1]])$label
class(V(mutag[[1]])$label)
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
ip_labels = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs-labels/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full.csv"
filenames <- list.files(ip)
filenames_labels <- list.files(ip_labels)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
cur_file_labels <- paste(c(ip_labels,filenames_labels[i]), collapse="")
labels <- readLines(cur_file_labels)
labels <- as.numeric(labels)
V(g)$label <- labels;
graphs_list[[i]] <- g
}
warnings()
graphs_list[[1]]
vertex_attr(graphs_list[[1]])
mutag[[1]]
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
ip_labels = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs-labels/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full_vertexgauss.csv"
filenames <- list.files(ip)
filenames_labels <- list.files(ip_labels)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
cur_file_labels <- paste(c(ip_labels,filenames_labels[i]), collapse="")
labels <- readLines(cur_file_labels)
labels <- as.numeric(labels)
V(g)$label <- labels;
graphs_list[[i]] <- g
}
K <- CalculateVertexHistGaussKernel(mutag, .1)
K
K <- CalculateVertexHistGaussKernel(graphs_list, .1)
K
K <- CalculateVertexHistKernel(graphs_list)
K
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/polbooks");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs/"
ip_labels = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-graphs-labels/"
opfile = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/polbooks-kernels/gram_full_vertexlabelhist.csv"
filenames <- list.files(ip)
filenames_labels <- list.files(ip_labels)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
cur_file_labels <- paste(c(ip_labels,filenames_labels[i]), collapse="")
labels <- readLines(cur_file_labels)
labels <- as.numeric(labels)
V(g)$label <- labels;
graphs_list[[i]] <- g
}
# K <- CalculateConnectedGraphletKernel(graphs_list, 4)
# K <- CalculateExponentialRandomWalkKernel(graphs_list,0.1)
K <- CalculateVertexHistKernel(graphs_list)
K
write.table(K, file = opfile, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
remove.packages("graphkernels")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
remove.packages("graphkernels")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
devtools
devtools::build("/Users/mukundraj/Desktop/graphkernels")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
library("devtools")
library("RcppEigen", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
library("Rcpp", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
devtools::build("/Users/mukundraj/Desktop/graphkernels")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
ls
ls()
cd ~/Desktop
cd "~/Desktop"
cd
build
build("/Users/mukundraj/Desktop/graphkernels")
build("/Users/mukundraj/Desktop/graphkernels")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
devtools::has_devel()
library(Rcpp)
cppFunction('
int one() {
return 1;
}
')
one()
devtools::install_github("dplyr")
remove.packages("graphkernels")
build("/Users/mukundraj/Desktop/graphkernels")
remove.packages("graphkernels",args="-v")
build("/Users/mukundraj/Desktop/graphkernels",args = "-v")
build("/Users/mukundraj/Desktop/graphkernels",args = "--md5")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
compileAttributes("/Users/mukundraj/Desktop/graphkernels")
compileAttributes("/Users/mukundraj/Desktop/graphkernels")
build("/Users/mukundraj/Desktop/graphkernels",args = "--md5")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
build("/Users/mukundraj/Desktop/graphkernels",args = "--md5")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
compileAttributes("/Users/mukundraj/Desktop/graphkernels")
build("/Users/mukundraj/Desktop/graphkernels",args = "--md5")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
rcpp
sessionInfo()
packageVersion("Rcpp")
