layout(matrix(1:9, 3, 3))
for (i in 1:9) plot(rtree(20))
install.packages("ape")
for (i in 1:9) plot(rtree(20))
import(ape)
library("ape", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
import(ape)
for (i in 1:9) plot(rtree(20))
for (i in 1:9) plot(rtree(20))
plot(rtree(4))
plot(rtree(4))
plot(rtree(4))
plot(rtree(4))
rtree(4)
nodelabels()
tree <- pbtree(b = 1, d = 0.2, n = 40)
install.packages("phytools")
tree <- pbtree(b = 1, d = 0.2, n = 40)
library("phytools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("rgl")
install.packages("maps")
tree <- pbtree(b = 1, d = 0.2, n = 40)
library("phytools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:rgl", unload=TRUE)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:rgl", unload=TRUE)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:rgl", unload=TRUE)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:rgl", unload=TRUE)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library", type="source")
detach("package:rgl", unload=TRUE)
install.packages("rgl")
install.packages("rgl",type="source")
source('~/Desktop/work/projects/kgd/graphdepth.jl/src/extern/R/get_layout_from_gram.R')
library("monoProc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data(cars)
cars.lo <- loess(dist ~ speed, cars,control = loess.control(surface = "direct"))predict<-predict(cars.lo, data.frame(speed = seq(5, 30, 1)))plot(cars.lo, xlab="speed", ylab="dist")lines(seq(5, 30, 1),predict)
cars.lo <- loess(dist ~ speed, cars,
)
cars.lot
cars.lo
class(cars.lo)
class(loess)
loess
speed<-cars$speed
dist<-cars$dist
fit1<-ksmooth(speed, dist, "normal", bandwidth=2)
fit1
type(fit)
class(fit1)
M <- cor(matrix(rnorm(1000), ncol = 10))
M
D <- corDist(M)
install.packages("MKmisc")
library("MKmisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
D <- corDist(M)
D
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
install.packages("RcppEigen")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
install.packages("igraph")
install.packages("~/Desktop/graphkernels_1.4.tar.gz", repos = NULL, type = "source")
install.packages("igraph")
install.packages("~/Desktop/igraph_1.0.1.tar.gz", repos = NULL, type = "source")
install.packages("~/Desktop/igraph_1.0.1.tar.gz", repos = NULL, type = "source")
rhome
r rhome
Sys.getenv("HOME")
data(mutag)
library("igraph", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("graphkernels", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data('mutag')
KEH <- CalculateEdgeHistKernel(mutag)
KEH
KGL <- CalculateGraphletKernel(mutag, 4)
KGL
igraph[1]
mutag(1)
mutag[1]
typeof(mutag)
typeof(mutag[1])
print 'hello'
# arbitrary data
train <- matrix(sample(c("a","b","c"),12,replace=TRUE), ncol=2) # n x 2
print(paste0("Current working dir: ", wd))
print(paste0("Current working dir: ", 'wd'))
length(f)
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
f <- list.files(pattern="201\\d{5}\\.txt")
length(f)
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
list.files(ip)
f <- list.files(list.files(ip))
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
f <- list.files(list.files(ip))
length(f)
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
f <- list.files(list.files(ip))
f
length(f)
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
list.files(ip)
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
files <- list.files(ip)
files
type(files)
length(files)
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
files <- list.files(ip)
f <- list.files(list.files(ip))
length(f)
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
files <- list.files(ip)
length(files)
i
#   startdate <- paste(c(year, "-04-01"), collapse = "")
#   enddate <- paste(c(year+1, "-03-31"), collapse = "")
#   filename <- paste(c(year, ".csv"), collapse = "")
#   print(paste(startdate,enddate))
#   tempdata = getWeatherForDate("SEA", startdate, end_date=enddate, opt_write_to_file=FALSE)
#   drops <- c("Date")
#   tempdata <- tempdata[ , !(names(tempdata) %in% drops)]
#   tempdata_mat <- data.matrix(tempdata)
#   write.table(tempdata_mat, file = filename, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
}
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/imdbprocess");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
filenames <- list.files(ip)
N = length(filenames)
# output path and filename
for (i in 1:N){
i
#   startdate <- paste(c(year, "-04-01"), collapse = "")
#   enddate <- paste(c(year+1, "-03-31"), collapse = "")
#   filename <- paste(c(year, ".csv"), collapse = "")
#   print(paste(startdate,enddate))
#   tempdata = getWeatherForDate("SEA", startdate, end_date=enddate, opt_write_to_file=FALSE)
#   drops <- c("Date")
#   tempdata <- tempdata[ , !(names(tempdata) %in% drops)]
#   tempdata_mat <- data.matrix(tempdata)
#   write.table(tempdata_mat, file = filename, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
}
for (i in 1:N){
i+1
#   startdate <- paste(c(year, "-04-01"), collapse = "")
#   enddate <- paste(c(year+1, "-03-31"), collapse = "")
#   filename <- paste(c(year, ".csv"), collapse = "")
#   print(paste(startdate,enddate))
#   tempdata = getWeatherForDate("SEA", startdate, end_date=enddate, opt_write_to_file=FALSE)
#   drops <- c("Date")
#   tempdata <- tempdata[ , !(names(tempdata) %in% drops)]
#   tempdata_mat <- data.matrix(tempdata)
#   write.table(tempdata_mat, file = filename, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
}
for (i in 1:N){
print(i)
#   startdate <- paste(c(year, "-04-01"), collapse = "")
#   enddate <- paste(c(year+1, "-03-31"), collapse = "")
#   filename <- paste(c(year, ".csv"), collapse = "")
#   print(paste(startdate,enddate))
#   tempdata = getWeatherForDate("SEA", startdate, end_date=enddate, opt_write_to_file=FALSE)
#   drops <- c("Date")
#   tempdata <- tempdata[ , !(names(tempdata) %in% drops)]
#   tempdata_mat <- data.matrix(tempdata)
#   write.table(tempdata_mat, file = filename, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
}
for (i in 1:N){
print(i)
cur_file <- paste(c(ip,filenames[i]))
print(cur_file)
#   startdate <- paste(c(year, "-04-01"), collapse = "")
#   enddate <- paste(c(year+1, "-03-31"), collapse = "")
#   filename <- paste(c(year, ".csv"), collapse = "")
#   print(paste(startdate,enddate))
#   tempdata = getWeatherForDate("SEA", startdate, end_date=enddate, opt_write_to_file=FALSE)
#   drops <- c("Date")
#   tempdata <- tempdata[ , !(names(tempdata) %in% drops)]
#   tempdata_mat <- data.matrix(tempdata)
#   write.table(tempdata_mat, file = filename, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
}
cur_file <- paste(c(ip,filenames[i]), collapse="")
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/imdbprocess");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
filenames <- list.files(ip)
N = length(filenames)
# output path and filename
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
#   startdate <- paste(c(year, "-04-01"), collapse = "")
#   enddate <- paste(c(year+1, "-03-31"), collapse = "")
#   filename <- paste(c(year, ".csv"), collapse = "")
#   print(paste(startdate,enddate))
#   tempdata = getWeatherForDate("SEA", startdate, end_date=enddate, opt_write_to_file=FALSE)
#   drops <- c("Date")
#   tempdata <- tempdata[ , !(names(tempdata) %in% drops)]
#   tempdata_mat <- data.matrix(tempdata)
#   write.table(tempdata_mat, file = filename, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
}
# read_graph(file, format = c("edgelist"));
#https://distill.pub/2016/misread-tsne/
#https://github.com/oreillymedia/t-SNE-tutorial
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/imdbprocess");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
filenames <- list.files(ip)
N = length(filenames)
# output path and filename
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
print(g)
#   startdate <- paste(c(year, "-04-01"), collapse = "")
#   enddate <- paste(c(year+1, "-03-31"), collapse = "")
#   filename <- paste(c(year, ".csv"), collapse = "")
#   print(paste(startdate,enddate))
#   tempdata = getWeatherForDate("SEA", startdate, end_date=enddate, opt_write_to_file=FALSE)
#   drops <- c("Date")
#   tempdata <- tempdata[ , !(names(tempdata) %in% drops)]
#   tempdata_mat <- data.matrix(tempdata)
#   write.table(tempdata_mat, file = filename, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
}
#
#https://distill.pub/2016/misread-tsne/
#https://github.com/oreillymedia/t-SNE-tutorial
data(mutag)
K <- CalculateConnectedGraphletKernel(mutag, 4)
typeof(mutag)
typeof(mutag[0])
mutag[0]
typeof(g)
g
mutag[0]
mutag[[0]]
mutag
mutag[1]
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/imdbprocess");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
filenames <- list.files(ip)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
print(g)
graphs_list[i] <- g
#   startdate <- paste(c(year, "-04-01"), collapse = "")
#   enddate <- paste(c(year+1, "-03-31"), collapse = "")
#   filename <- paste(c(year, ".csv"), collapse = "")
#   print(paste(startdate,enddate))
#   tempdata = getWeatherForDate("SEA", startdate, end_date=enddate, opt_write_to_file=FALSE)
#   drops <- c("Date")
#   tempdata <- tempdata[ , !(names(tempdata) %in% drops)]
#   tempdata_mat <- data.matrix(tempdata)
#   write.table(tempdata_mat, file = filename, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
}
#
#https://distill.pub/2016/misread-tsne/
#https://github.com/oreillymedia/t-SNE-tutorial
graphs_list
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/imdbprocess");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
filenames <- list.files(ip)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
print(g)
graphs_list[[i]] <- g
#   startdate <- paste(c(year, "-04-01"), collapse = "")
#   enddate <- paste(c(year+1, "-03-31"), collapse = "")
#   filename <- paste(c(year, ".csv"), collapse = "")
#   print(paste(startdate,enddate))
#   tempdata = getWeatherForDate("SEA", startdate, end_date=enddate, opt_write_to_file=FALSE)
#   drops <- c("Date")
#   tempdata <- tempdata[ , !(names(tempdata) %in% drops)]
#   tempdata_mat <- data.matrix(tempdata)
#   write.table(tempdata_mat, file = filename, sep = ",", col.names = FALSE, qmethod = "double", row.names=FALSE)
}
#
#https://distill.pub/2016/misread-tsne/
#https://github.com/oreillymedia/t-SNE-tutorial
graphs_list
K <- CalculateConnectedGraphletKernel(graphs_list, 4)
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/imdbprocess");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
filenames <- list.files(ip)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
print(g)
graphs_list[[i]] <- g
}
#https://distill.pub/2016/misread-tsne/
#https://github.com/oreillymedia/t-SNE-tutorial
setwd("/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/src/extern/r/imdbprocess");
# input path
ip = "/Users/mukundraj/Desktop/work/projects/kerneldepth/kerneldepth/data/processed/imdb-graphs/"
filenames <- list.files(ip)
N = length(filenames)
# output path and filename
graphs_list = list()
for (i in 1:N){
cur_file <- paste(c(ip,filenames[i]), collapse="")
print(cur_file)
g <- read_graph(cur_file, format = c("edgelist"));
graphs_list[[i]] <- g
}
K <- CalculateConnectedGraphletKernel(graphs_list, 4)
#https://distill.pub/2016/misread-tsne/
#https://github.com/oreillymedia/t-SNE-tutorial
K <- CalculateConnectedGraphletKernel(graphs_list, 4)
